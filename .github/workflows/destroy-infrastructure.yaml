name: Destroy the infrastructure

env:
  REGION: 'eu-central-1'
  CLUSTER_NAME: 'maawf-cluster'
  APP_NAME: 'maawf-backend'

on:
  workflow_dispatch:

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Destroy the EKS cluster
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} ||true
          helm uninstall ${{ env.APP_NAME }} || true
          helm uninstall  ${{ env.APP_NAME }}-test -n testing || true
      
      - name: Wait for 30 seconds to allow the cluster to be deleted
        run: |
          sleep 30
        
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          cd .infrastructure
          terraform init

      - name: Terraform Destroy
        run: |
          cd .infrastructure
          terraform destroy -auto-approve || true

      - name: Push the new tfState file to the repository
        run: |
          cd .infrastructure
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "ci: executed Terraform destroy"
          git push
